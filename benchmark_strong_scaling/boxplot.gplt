type = 'holygraph'
filename_parallel = type.'_parallel_normal.out'
filename_parallel_lazy = type.'_parallel_lazy.out'
filename_sequential = type.'_sequential.out'

parallel_color = "#FF8C00"
parallel_color_lazy = "#008CFF"
sequential_color = "#00993A"
lwidth = 2

number_of_cores = 8 

zahl_1 = 1.01
zahl_2 = 0.98

set terminal eps size 6,4

set output 'out.eps'

do for [r=7:12] {
	
	grid_size = 2**r

	#functions
	filter(col, i, retcol) = (column(col) == i ? column(retcol) : 1/0)
	filter2(col, i, col2, j, retcol) = (column(col) == i && column(col2) == j ? column(retcol) : 1/0)

	set style data boxplot

	set title 'Strong scaling '.grid_size.' x '.grid_size
	set xlabel 'number of cores'
	set ylabel 'time [s]'

	#box style

	set pointsize 0.05
	set boxwidth 0.11
	set style fill  border lc rgb parallel_color

	set logscale xy 2

	set xrange [0.9:8.8]
	set xtics (1,2,3,4,5,6,7,8)

	#erste Zeile ohne Titel!
	plot for [i=2:number_of_cores] filename_parallel using (i*zahl_1):(filter2(3, i, 1, grid_size, 5)) lc rgb parallel_color lw lwidth notitle, \
		filename_parallel using (zahl_1):(filter2(3, 1, 1, grid_size, 5)) lc rgb parallel_color lw lwidth title 'parallel normal', \
		for [i=2:number_of_cores] filename_parallel_lazy using (i*zahl_2):(filter2(3, i, 1, grid_size, 5)) lc rgb parallel_color_lazy lw lwidth fill empty border lc rgb parallel_color_lazy notitle, \
		filename_parallel_lazy using (zahl_2):(filter2(3, 1, 1, grid_size, 5)) lc rgb parallel_color_lazy lw lwidth fill empty border lc rgb parallel_color_lazy title 'parallel lazy', \
		filename_sequential using (1):(filter(1, grid_size, 4)) lc rgb sequential_color lw lwidth fill empty border lc rgb sequential_color title 'sequential'

}
